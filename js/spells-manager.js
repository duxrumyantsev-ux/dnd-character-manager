class SpellsManager {
    constructor(spellLoader) {
        this.spellLoader = spellLoader;
    }

    // –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
    renderSpellsList(spells, filters = {}) {
        const spellsList = document.getElementById('spells-list');
        
        if (spells.length === 0) {
            spellsList.innerHTML = `
                <div class="empty-state">
                    <div class="empty-icon">‚ú®</div>
                    <h3>–ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</p>
                </div>
            `;
            return;
        }

        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –ø–æ —É—Ä–æ–≤–Ω—è–º
        const spellsByLevel = this.groupSpellsByLevel(spells);
        
        let html = '';
        
        Object.keys(spellsByLevel).sort((a, b) => parseInt(a) - parseInt(b)).forEach(level => {
            const levelSpells = spellsByLevel[level];
            const levelName = level === '0' ? '–ó–∞–≥–æ–≤–æ—Ä—ã' : `${level} —É—Ä–æ–≤–µ–Ω—å`;
            
            html += `
                <div class="spell-level-section">
                    <h3 class="spell-level-title">${levelName}</h3>
                    <div class="spells-grid">
                        ${levelSpells.map(spell => this.renderSpellCard(spell)).join('')}
                    </div>
                </div>
            `;
        });

        spellsList.innerHTML = html;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
        this.setupSpellCardHandlers();
    }

    groupSpellsByLevel(spells) {
        return spells.reduce((groups, spell) => {
            const level = spell.level;
            if (!groups[level]) {
                groups[level] = [];
            }
            groups[level].push(spell);
            return groups;
        }, {});
    }

    renderSpellCard(spell) {
        const levelText = spell.level === 0 ? '–ó–∞–≥–æ–≤–æ—Ä' : `${spell.level} —É—Ä.`;
        const classesText = spell.classes.join(', ');
        
        return `
            <div class="spell-card" data-spell-id="${spell.id}">
                <div class="spell-header">
                    <h4 class="spell-name">${spell.name}</h4>
                    <span class="spell-level">${levelText}</span>
                </div>
                
                <div class="spell-details">
                    <div class="spell-school">${spell.school}</div>
                    <div class="spell-classes">${classesText}</div>
                </div>
                
                <div class="spell-info">
                    <div class="spell-property">
                        <span class="property-label">–í—Ä–µ–º—è –Ω–∞–∫–ª–∞–¥—ã–≤–∞–Ω–∏—è:</span>
                        <span class="property-value">${spell.castingTime}</span>
                    </div>
                    <div class="spell-property">
                        <span class="property-label">–î–∏—Å—Ç–∞–Ω—Ü–∏—è:</span>
                        <span class="property-value">${spell.range}</span>
                    </div>
                    <div class="spell-property">
                        <span class="property-label">–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:</span>
                        <span class="property-value">${spell.components.join(', ')}</span>
                    </div>
                    <div class="spell-property">
                        <span class="property-label">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</span>
                        <span class="property-value">${spell.duration}</span>
                    </div>
                </div>
                
                <div class="spell-actions">
                    <button class="btn-view-spell" data-spell-id="${spell.id}">
                        üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <button class="btn-add-to-character" data-spell-id="${spell.id}">
                        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂—É
                    </button>
                </div>
            </div>
        `;
    }

    setupSpellCardHandlers() {
        // –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–∏
        document.querySelectorAll('.btn-view-spell').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const spellId = e.target.dataset.spellId;
                this.showSpellDetails(spellId);
            });
        });

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂—É
        document.querySelectorAll('.btn-add-to-character').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const spellId = e.target.dataset.spellId;
                this.addSpellToCharacter(spellId);
            });
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–∏
    showSpellDetails(spellId) {
        const spell = this.spellLoader.getSpellById(spellId);
        if (!spell) return;

        const modalHtml = `
            <div class="modal-overlay" id="spell-details-modal">
                <div class="modal spell-modal">
                    <div class="modal-header">
                        <h3>${spell.name}</h3>
                        <button class="btn-close" onclick="this.closest('.modal-overlay').remove()">√ó</button>
                    </div>
                    
                    <div class="spell-details-content">
                        <div class="spell-basic-info">
                            <div class="spell-level-badge level-${spell.level}">
                                ${spell.level === 0 ? '–ó–∞–≥–æ–≤–æ—Ä' : `${spell.level} —É—Ä–æ–≤–µ–Ω—å`}
                            </div>
                            <div class="spell-school-badge">${spell.school}</div>
                            ${spell.concentration ? '<div class="concentration-badge">–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è</div>' : ''}
                            ${spell.ritual ? '<div class="ritual-badge">–†–∏—Ç—É–∞–ª</div>' : ''}
                        </div>
                        
                        <div class="spell-properties-grid">
                            <div class="property">
                                <strong>–í—Ä–µ–º—è –Ω–∞–∫–ª–∞–¥—ã–≤–∞–Ω–∏—è:</strong> ${spell.castingTime}
                            </div>
                            <div class="property">
                                <strong>–î–∏—Å—Ç–∞–Ω—Ü–∏—è:</strong> ${spell.range}
                            </div>
                            <div class="property">
                                <strong>–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:</strong> ${spell.components.join(', ')}
                            </div>
                            <div class="property">
                                <strong>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> ${spell.duration}
                            </div>
                        </div>
                        
                        ${spell.material ? `
                            <div class="spell-material">
                                <strong>–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:</strong> ${spell.material}
                            </div>
                        ` : ''}
                        
                        <div class="spell-classes">
                            <strong>–ö–ª–∞—Å—Å—ã:</strong> ${spell.classes.join(', ')}
                        </div>
                        
                        <div class="spell-description">
                            <p>${spell.description}</p>
                        </div>
                        
                        ${spell.atHigherLevels ? `
                            <div class="spell-higher-levels">
                                <strong>–ù–∞ –≤—ã—Å—à–∏—Ö —É—Ä–æ–≤–Ω—è—Ö:</strong>
                                <p>${spell.atHigherLevels}</p>
                            </div>
                        ` : ''}
                    </div>
                    
                    <div class="modal-actions">
                        <button class="btn-primary" onclick="spellsManager.addSpellToCharacter('${spell.id}')">
                            –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂—É
                        </button>
                        <button class="btn-secondary" onclick="this.closest('.modal-overlay').remove()">
                            –ó–∞–∫—Ä—ã—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', modalHtml);
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂—É
    addSpellToCharacter(spellId) {
        if (!app.characterManager) {
            alert('–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
            return;
        }

        const spell = this.spellLoader.getSpellById(spellId);
        if (!spell) return;

        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –∫ —Ç–µ–∫—É—â–µ–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É
        // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        alert(`–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ "${spell.name}" –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–∂—É`);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ
        const modal = document.getElementById('spell-details-modal');
        if (modal) {
            modal.remove();
        }
    }
}

const spellsManager = new SpellsManager(spellLoader);